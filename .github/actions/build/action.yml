
name: "Build application"

runs:
  using: 'composite'
  steps:

    # - name: Show GitHub context
    #   shell: bash
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    - name: Cache build
      id: cache_build
      uses: actions/cache@v2
      with:
        path: .next
        key: next-build-${{ github.sha }}

    # Re-build prisma types which are cached inside of node_modules
    - name: Re-build Prisma types
      shell: bash
      run: npm run build:prisma

    - name: Build
      shell: bash
      if: steps.cache_build.outputs.cache-hit != 'true'
      run: npm run build

    - name: Remove dev dependencies
      run: |
        npm prune --production
        rm -rf .next/cache

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v3
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPO: charmverse-web3-workspace
      with:
        context: .
        push: true
        tags: "${{ env.REGISTRY }}/${{ env.REPO }}:pr${{ github.event.number }}-${{ env.GITHUB_SHA_SHORT }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
